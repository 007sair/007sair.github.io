// ==================================================
// Mixin
// ==================================================
@import "prefixer";

//清除浮动
@mixin clearfix($legacy-support-for-ie: true) {
    @if $legacy-support-for-ie {
        *zoom: 1;
    }
    &:before,&:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
        overflow: hidden;
    }
}
%clearfix {
    @include clearfix;
}

//渐变效果
//@param  {[float]} $opacity      		 	[opacity] 0-1的小数
//@param  {[boolean]} $support-for-ie       [true] 支持IE8-,[false] 不支持IE8-
@mixin opacity($opacity:.65, $support-for-ie:true) {
	opacity: $opacity;
	@if $support-for-ie{
		$opacity-ie: $opacity * 100;
		filter: alpha(opacity=$opacity-ie); //IE8
	}
}


//背景半透明
//@param  {#HEX  } $color               		十六进制的色值，如：#aabbcc
//@param  {number} $opacity             		0-1的小数
//@param  {boolean} $support-for-ie:true 		如果为真，支持ie
@mixin rgba($color, $opacity, $support-for-ie:true){
	background-color:rgba($color,$opacity);
	@if $support-for-ie{
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ie-hex-str(rgba($color,$opacity))},endColorstr=#{ie-hex-str(rgba($color,$opacity))});
		:root & {
			filter: none;
		}
	}
}

//垂直居中 绝对定位版
//@param  {[number]} $w      [w] 宽度	设计稿上的px值,[false] 宽度不设置
//@param  {[number]} $h      [h] 高度	设计稿上的px值,[false] 高度不设置
@mixin posCenter($w, $h){
	@if($w == false){
		margin: toREM(-$h/2) 0 0 0;
	}
	@else if($h == false){
		margin: 0 0 0 toREM(-$w/2);
	}
	@else{
		margin: toREM(-$h/2) 0 0 toREM(-$w/2);
	}
}

//float 
@mixin float($direction: left,$support-for-ie:false){
	float: unquote($direction);
	@if $support-for-ie{
		_display: inline;
	}
}

//inline-block
@mixin inline-block($alignment: middle,$support-for-ie:true) {
	display: inline-block;
	@if $alignment and $alignment != none {
		vertical-align: $alignment;
	}
	@if $support-for-ie {
		*vertical-align: auto;
		*display: inline;
		*zoom: 1;
	}
}

//最小宽、高
@mixin minWH($type, $num){
	@if ($type == width){
		min-width: $num;
		width: auto !important; 
		_width: $num;
	}
	@if ($type == height){
		min-height: $num;
		height: auto !important; 
		_height: $num;
	}
}


@function percent($self, $screen:1903){
	@return ($self / $screen) * 100%;
}


// ==================================================
// Variables
// ==================================================
// Supports 
// @media min-width
// @media max-width
// @media min-width and max-width

$viewport-increment: 0.1px; // customize to suite

// Pc/Mac
$desktop: 1024px; // customize to suite
$pre-desktop: $desktop - $viewport-increment;

// iPad
$tablet: 768px; // customize to suite
$pre-tablet: $tablet - $viewport-increment;

// iPhone
$palm: 640px; // customize to suite
$post-palm: $palm + $viewport-increment;

// Constraints
$min: min-width;
$max: max-width;


// ==================================================
// Media Query @Mixin
// ==================================================

@mixin mediaQuery($constraint, $viewport1, $viewport2: null) {
	@if $constraint == $min {
		@media screen and ($min: $viewport1) {
			@content;
		}
	} @else if $constraint == $max {
		@media screen and ($max: $viewport1) {
			@content;
		}
	} @else {
		@media screen and ($min: $viewport1) and ($max: $viewport2) {
			@content;
		}
	}
}