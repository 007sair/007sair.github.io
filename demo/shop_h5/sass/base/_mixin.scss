//------------------
// mixin
//------------------
@import "prefixer";

//清除浮动
@mixin clearfix($legacy-support-for-ie: true) {
    @if $legacy-support-for-ie {
        *zoom: 1;
    }
    &:before,&:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
        overflow: hidden;
    }
}
%clearfix {
    @include clearfix;
}

//渐变效果
//@param  {[float]} $opacity      		 	[opacity] 0-1的小数
//@param  {[boolean]} $support-for-ie       [true] 支持IE8-,[false] 不支持IE8-
@mixin opacity($opacity:.65, $support-for-ie:true) {
	opacity: $opacity;
	@if $support-for-ie{
		$opacity-ie: $opacity * 100;
		filter: alpha(opacity=$opacity-ie); //IE8
	}
}


//背景半透明
//@param  {#HEX  } $color               		十六进制的色值，如：#aabbcc
//@param  {number} $opacity             		0-1的小数
//@param  {boolean} $support-for-ie:true 		如果为真，支持ie
@mixin rgba($color, $opacity, $support-for-ie:true){
	background-color:rgba($color,$opacity);
	@if $support-for-ie{
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ie-hex-str(rgba($color,$opacity))},endColorstr=#{ie-hex-str(rgba($color,$opacity))});
		:root & {
			filter: none;
		}
	}
}

//[centerPos 垂直居中 绝对定位版]
//@param  {[string]} $direction 	[居中方式，x：横向居中，y：纵向居中，both：横向和纵向绝对居中]
//@param  {[number]} $width  		[居中元素的宽度]
//@param  {[number]} $height		[居中元素的高度]
@mixin centerPos($direction, $width, $height){
	position: absolute;
	width: toREM($width);
	height: toREM($height);
	@if($direction == x){
		left: 50%;
		margin: 0 0 0 toREM(-$height/2);
	}
	@else if($direction == y){
		top: 50%;
		margin: toREM(-$width/2) 0 0 0;
	}
	@else if($direction == both){
		top: 50%;
		left: 50%;
		margin: toREM(-$height/2) 0 0 toREM(-$width/2);
	}
}

//float 
@mixin float($direction: left,$support-for-ie:false){
	float: unquote($direction);
	@if $support-for-ie{
		_display: inline;
	}
}

//inline-block
@mixin inline-block($alignment: middle,$support-for-ie:true) {
	display: inline-block;
	@if $alignment and $alignment != none {
		vertical-align: $alignment;
	}
	@if $support-for-ie {
		*vertical-align: auto;
		*display: inline;
		*zoom: 1;
	}
}

//最小宽、高
@mixin minWH($type, $num){
	@if ($type == width or $type == both ){
		min-width: $num;
		width: auto !important; 
		_width: $num;
	}
	@if ($type == height or $type == both){
		min-height: $num;
		height: auto !important; 
		_height: $num;
	}
}

@mixin placeholder($color){
	&::-webkit-input-placeholder { 
		color: $color; 
	} 
	&:-moz-placeholder { 
		color: $color;
	} 
	&::-moz-placeholder { 
		color: $color;
	}
	&:-ms-input-placeholder { 
		color: $color; 
	}
}
